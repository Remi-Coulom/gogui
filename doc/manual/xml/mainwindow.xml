<chapter id="menubar">

<title>Main Window</title>

<section>
<title>Go Board</title>
<indexterm>
<primary>board</primary>
</indexterm>
<para>
Clicking on an empty field in the Go board plays a move there.
In setup mode, score mode or after certain analyze commands,
clicking on a field has a special meaning (see
<xref linkend="setupblack"/>, <xref linkend="setupwhite"/>,
 <xref linkend="score"/>, and <xref linkend="analyze"/>).
</para>
<para>
If <guimenuitem>Cursor</guimenuitem> is enabled in the
<guimenu>View</guimenu> menu, then fields can be selected with
the keyboard by moving the cursor (the gray square corners) with the cursor
keys to the target field and pressing <keycap>Enter</keycap>.
Holding <keycap>Shift</keycap> while pressing a cursor key moves the
cursor to the next handicap line or to the edge of the board.
</para>
<para>
The mouse wheel can be used to go forward and backward in the game,
if the mouse pointer is located within the Go board. If the shift key is pressed
while the mouse wheel is used, the step size is increased to 10 moves.
</para>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

<section>
<title>Info Panel</title>
<indexterm>
<primary>info panel</primary>
</indexterm>
<para>
The panel on the right side of the board shows information about the
current position, like the number of prisoner stones and the clock.
A text field exists for displaying and editing comment text for the current
position.
If you select text in the comment field, it will automatically parsed for
valid points, which will be marked on the board while the text is selected.
Selected text in the comment is also used as a default text for
<guimenuitem>Find in Comments</guimenuitem>.
</para>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

<section>
<title>Tool Bar</title>
<indexterm>
<primary>tool bar</primary>
</indexterm>
<para>
The tool bar contains buttons for frequently used commands from the main menu.
</para>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

<section>
<title>Status Bar</title>
<indexterm>
<primary>status bar</primary>
</indexterm>
<para>
The status bar can show a text line, depending on the current state.
A small stone in the left lower corner indicates the current player to move.
On the right side, the last move and current variation is shown.
</para>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

<section>
<title>Accelerator Keys</title>
<indexterm>
<primary>accelerator keys</primary>
</indexterm>
<para>
In addition to the accelerator keys shown in the menu, the following
accelerator keys are defined:
<variablelist>
<varlistentry>
<term><keycap>F5</keycap></term>
<listitem>
<simpara>
Make the computer play for the color currently to move.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term><keycap>F6</keycap></term>
<listitem>
<simpara>
Focus the main window (if one of the utility windows currently has the focus).
</simpara>
</listitem>
</varlistentry>
</variablelist>
On Mac OS X, the accelerators are defined in combination with the Apple key.
</para>
</section>

<section>
<title>File Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>Open</guimenuitem></term>
<listitem>
<para>
Open a game from a file in
<ulink url="http://www.red-bean.com/sgf/">SGF</ulink>
format or Jago XML format (see <xref linkend="xmlformat"/>).
The file format is auto-detected.
Game collections are not supported.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Open Recent</guisubmenu></term>
<listitem>
<para>
Open a game from a list of recently used files.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Save</guimenuitem></term>
<listitem>
<para>
Save the current game to the associated file name.
If the game has no file name, this menu item acts like
<guimenuitem>Save As</guimenuitem>.
The file will be saves in the same format (SGF or Jago XML) as it originally
had when it was loaded.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Save As</guimenuitem></term>
<listitem>
<para>
Save the current game to a file.
If the chosen filename has "xml" as a file ending, it will be saved
in XML format (see <xref linkend="xmlformat"/>), otherwise in SGF format.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Import</guisubmenu> / <guimenuitem>Text Position</guimenuitem></term>
<listitem>
<para>
Import a text position from a file.
The import algorithm can handle a variety of formats.
However, only full board positions are supported.
Non-square positions will be read into the smallest containing square
board size at the top left position.
Black stones can be represented by 'X', 'x', '@' or '#'; white stones by
'O' or 'o' (however one representation must be used consistently); '.' and
'+' are interpreted as empty points.
Space characters are allowed between the points; leading numbers (or '|'
and '$' characters) are ignored, as well as single inserted invalid lines
(to support appended text after the row that was wrapped).
If a a line contains the string "b|black|w|white to play|move"
(case-insensitive), it will be used to set the current player in the position.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Import</guisubmenu> / <guimenuitem>Text Position from Clipboard</guimenuitem></term>
<listitem>
<para>
Import a text position from the clipboard. Same as
<guisubmenu>Import</guisubmenu> / <guimenuitem>Text Position</guimenuitem>,
but parses the text selection copied to the clipboard.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Import</guisubmenu> / <guimenuitem>SGF from Clipboard</guimenuitem></term>
<listitem>
<para>
Import a SGF from the clipboard. Same as <guimenuitem>Open</guimenuitem>,
but parses the text selection copied to the clipboard.
</para>
</listitem>
</varlistentry>

 <varlistentry>
  <term><guisubmenu>Import</guisubmenu> / <guimenuitem>Programs</guimenuitem></term>
  <listitem>
   <para>
    Import a programs' list from an exported xml file
   </para>
  </listitem>
 </varlistentry>

<varlistentry>
<term><guisubmenu>Export</guisubmenu> / <guimenuitem>SGF Position</guimenuitem></term>
<listitem>
<para>
Export the current position to a file in SGF format.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Export</guisubmenu> / <guimenuitem>LaTeX Main Variation</guimenuitem></term>
<listitem>
<para>
Export the main variation of the current game to a
<ulink url="http://www.latex-project.org/">LaTeX</ulink> file using
<ulink url="http://www.ctan.org/tex-archive/graphics/pstricks/contrib/psgo/">
PSGO</ulink> style.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Export</guisubmenu> / <guimenuitem>LaTeX Position</guimenuitem></term>
<listitem>
<para>
Export the current position to a
<ulink url="http://www.latex-project.org/">LaTeX</ulink> file using
<ulink url="http://www.ctan.org/tex-archive/graphics/pstricks/contrib/psgo/">
PSGO</ulink> style.
Some board markups are also exported
(string labels, marked and selected points).
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Export</guisubmenu> / <guimenuitem>PNG Image</guimenuitem></term>
<listitem>
<para>
Export the current position including all markup to an image file in PNG
format. The width of the image can be specified in an input dialog, which
offers the current width of the board on the screen as the default value.
For exporting images with very small sizes, it can produce better results
to export to an image with a larger size and use an external graphics
program to downscale it using a high-quality scaling algorithm.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Export</guisubmenu> / <guimenuitem>Text Position</guimenuitem></term>
<listitem>
<para>
Export the current position as a text diagram to a file.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Export</guisubmenu> / <guimenuitem>Text Position to Clipboard</guimenuitem></term>
<listitem>
<para>
Export the current position as a text diagram to the clipboard.
</para>
</listitem>
</varlistentry>

 <varlistentry>
  <term><guisubmenu>Export</guisubmenu> / <guimenuitem>Programs</guimenuitem></term>
  <listitem>
   <para>
    Export all the programs in a xml file.
   </para>
  </listitem>
 </varlistentry>

<varlistentry>
<term><guimenuitem>Print</guimenuitem></term>
<listitem>
<para>
Print a screen shot of the current board position, including all markups from
analyze commands.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Quit</guimenuitem></term>
<listitem>
<para>
Quit GoGui.
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

<section>
<title>Game Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>New Game</guimenuitem></term>
<listitem>
<para>
Start a new game.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Rules</guimenuitem></term>
<listitem>
<para>
Change the game. See <xref linkend="rules"/> for a complete documentation.
</para>
</listitem>
</varlistentry>


<varlistentry>
<term><guisubmenu>Board Size</guisubmenu></term>
<listitem>
<para>
Change the board size and start a new game.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Handicap</guisubmenu></term>
<listitem>
<para>
Set the number of handicap stones.
If handicap stones are used, the komi will be set to zero.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Game Info</guimenuitem></term>
<listitem>
<para>
Edit the game information.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Computer Color</guisubmenu></term>
<listitem>
<para>
Choose what side the Go program plays.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Pass</guimenuitem></term>
<listitem>
<para>
Play a pass move.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Clock</guisubmenu></term>
<listitem>
<para>
Halt or resume the clock.
If time settings were used, the remaining time for the players
is stored in the tree nodes and will be restored when going to a node.
</para>
</listitem>
</varlistentry>

<varlistentry id="score">
<term><guimenuitem>Score</guimenuitem></term>
<listitem>
<para>
Score the current game.
A window will be opened containing score information.
First, the Go program will be asked what stones are dead with the
<command>final_status_list dead</command> command.
Dead stones are marked with a cross-hair.
If the Go program does not support this command, or you don't agree with it,
you can change the status of stones by clicking on them.
If the Ok button is pressed, the score will be added to the game information.
</para>
<note>
<simpara>
In the current version of GoGui, all points surrounded by only one color are
considered to be territory, all points surrounded by both colors are dame
points.
It is not possible to mark dame points that are surrounded by stones of
only one color, which can occur in the Japanese rule set.
</simpara>
</note>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>


<section>
<title>Program Menu</title>
<variablelist>

<varlistentry>
<term><guisubmenu>Attach</guisubmenu></term>
<listitem>
<para>
Start a program from the list of Go programs and synchronize it to the current
game at the current position.
If a Go program was already attached, it will be terminated, before the new
program is started.
If the program is not a Go program, it will be be used as its own ruler.
Non-go programs must implement the rules' methods described in
(see <xref linkend="rules"/>).
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Detach</guimenuitem></term>
<listitem>
<para>
Terminate the currently attached Go program.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Play Single Move</guimenuitem></term>
<listitem>
<para>
Make the computer play a move but do not change the computer color.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Interrupt</guimenuitem></term>
<listitem>
<para>
Interrupt the command that is currently running.
This menu item is only active if a lengthy command (like move
generation) is running and if the Go program supports interrupting
(see <xref linkend="interrupt"/>).
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>New Program</guimenuitem></term>
<listitem>
<para>
Add a new Go program to the list of available Go programs.
The name field should contain a label for the
<guimenuitem>Attach</guimenuitem> menu.
The command field should contain the command to run the Go program.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Edit Programs</guimenuitem></term>
<listitem>
<para>
Edit the list of available Go programs.
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>


<section>
<title>Go Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>Beginning</guimenuitem></term>
<listitem>
<para>
Go to the start position of the current game.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Backward 10</guimenuitem></term>
<listitem>
<para>
Go backward ten moves.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Backward</guimenuitem></term>
<listitem>
<para>
Go backward one move.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Forward</guimenuitem></term>
<listitem>
<para>
Go forward one move.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Forward 10</guimenuitem></term>
<listitem>
<para>
Go forward ten moves.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>End</guimenuitem></term>
<listitem>
<para>
Go to end of the current variation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Go to Move</guimenuitem></term>
<listitem>
<para>
Go to a certain move number in the current variation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Next Variation</guimenuitem></term>
<listitem>
<para>
Go to the next variation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Previous Variation</guimenuitem></term>
<listitem>
<para>
Go to the previous variation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Next Earlier Variation</guimenuitem></term>
<listitem>
<para>
Go to the next variation earlier in the game tree.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Previous Earlier Variation</guimenuitem></term>
<listitem>
<para>
Go to the previous variation earlier in the game tree.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Back to Main Variation</guimenuitem></term>
<listitem>
<para>
Go back to the main variation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Go to Variation</guimenuitem></term>
<listitem>
<para>
Go to the first node of a certain variation.
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>


<section>
<title>Edit Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>Find in Comments</guimenuitem></term>
<listitem>
<para>
Find the next game node containing a search pattern in its comment text.
The search is case insensitive.
The pattern is a regular expression as used by the
<ulink url="http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html">java.util.regex.Pattern</ulink>
class, similar to Perl syntax.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Find Next</guimenuitem></term>
<listitem>
<para>
Find the next game node containing the last entered search pattern.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Make Main Variation</guimenuitem></term>
<listitem>
<para>
Make the current variation to the main variation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Delete Side Variations</guimenuitem></term>
<listitem>
<para>
Delete all variations except for the main variation.
This item is only enabled if the current node is in the main variation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Keep Only Position</guimenuitem></term>
<listitem>
<para>
Delete all variations and create a new game tree with the current
position as setup stones in the root node.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Truncate</guimenuitem></term>
<listitem>
<para>
Truncate the current variation beginning at and including the current node.
The current position will change to the father node of the current node
in the game tree.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Truncate Children</guimenuitem></term>
<listitem>
<para>
Truncate all child variations of the current node.
</para>
</listitem>
</varlistentry>

<varlistentry id="setupblack">
<term><guimenuitem>Setup Black</guimenuitem></term>
<listitem>
<para>
Enter setup mode and set the current color to Black or leave setup mode if
the current mode is already setup mode and the current color is Black.
In setup mode, you can place or remove stones of the current color.
It is also possible to place stones of the opposite color (without switching
the current color) by pressing a modifier key while placing a stone
(Ctrl, Alt or Meta) or using the right mouse button.
See also: <xref linkend="setupwhite"/>
</para>
</listitem>
</varlistentry>

<varlistentry id="setupwhite">
<term><guimenuitem>Setup White</guimenuitem></term>
<listitem>
<para>
Enter setup mode and set the current color to White or leave setup mode
the current mode is already setup mode and the current color is White.
See also: <xref linkend="setupblack"/>
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>


<section>
<title>View Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>Toolbar</guimenuitem></term>
<listitem>
<para>
Show or hide the toolbar.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Info Panel</guimenuitem></term>
<listitem>
<para>
Show or hide the game information panel at the right side of the board.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Board Orientation</guisubmenu></term>
<listitem>
<para>
Select the point of view from which the board is displayed.
<guimenuitem>Rotate 180°</guimenuitem> presents it from the opponents place.
<guimenuitem>Flip Horizontally</guimenuitem> and
<guimenuitem>Flip Vertically</guimenuitem> may be used in case of malformed
SGF files, which are created by some programs.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Cursor</guimenuitem></term>
<listitem>
<para>
Show the cursor on the board for keyboard navigation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Grid Labels</guimenuitem></term>
<listitem>
<para>
Show grid labels for board columns and rows.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Last Move</guimenuitem></term>
<listitem>
<para>
Mark the last move with a gray dot. If <xref linkend="variationlabels"/> is
set to <guimenuitem>Siblings</guimenuitem>, the last move will not be marked
if there are sibling variations.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Move Numbers</guimenuitem></term>
<listitem>
<para>
Show the move numbers for all moves played so far as labels on the board.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Play Sound</guimenuitem></term>
<listitem>
<para>
Beep after each computer move.
Some versions of Java use the PC speaker for the beep, and some generate the
sound using the sound card.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Monospace Comment Font</guimenuitem></term>
<listitem>
<para>
Use a fixed-width font in the comment field.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Variation Labels</guisubmenu></term>
<listitem>
<para>
If set to <guimenuitem>Children</guimenuitem>, the first moves of all
variations from this position will be marked with labels (also if the current
node has only a main variation and no side variations).
If set to <guimenuitem>Siblings</guimenuitem>, all variations from the parent
position will be marked (not if the parent node has only a main variation and
no side variations).
The labels are letters starting with 'A' ('*' will be used after 'Z').
If multiple variations start with the same move, a '>' is appended.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Icon Size</guimenuitem></term>
<listitem>
<para>
Set the size of the GoGui icons in the user's preferences. The application
should be closed to apply the modifications.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Tree</guisubmenu> / <guimenuitem>Labels</guimenuitem></term>
<listitem>
<para>
Configure the labels on the tree nodes.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Tree</guisubmenu> / <guimenuitem>Size</guimenuitem></term>
<listitem>
<para>
Configure the size of the tree nodes.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Tree</guisubmenu> / <guimenuitem>Subtree Sizes</guimenuitem></term>
<listitem>
<para>
Show the number of nodes in the subtree for nodes that are not expanded.
Showing the subtree size can slow down the updating of the game tree window
if large trees are edited.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Shell</guisubmenu> / <guimenuitem>Popup Completions</guimenuitem></term>
<listitem>
<para>
Popup a window with command completions when entering a command.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Shell</guisubmenu> / <guimenuitem>Auto Number</guimenuitem></term>
<listitem>
<para>
<indexterm>
<primary>Auto Number</primary>
</indexterm>
<indexterm>
<primary>Unknown command</primary>
</indexterm>
Automatically number GTP commands.
Note that some Go programs don't comply to the GTP standard and do not support
commands with a numerical ID.
They will usually answer with "Unknown command", because they try to parse
the ID as a command.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guisubmenu>Shell</guisubmenu> / <guimenuitem>Timestamp</guimenuitem></term>
<listitem>
<para>
Prepend each sent command and received response in the GTP shell window with a
time stamp.
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>


<section>
<title>Bookmarks Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>Add Bookmark</guimenuitem></term>
<listitem>
<para>
Add a new bookmark.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Edit Bookmarks</guimenuitem></term>
<listitem>
<para>
Edit the list of bookmarks.
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

<section>
<title>Tools Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>Tree Viewer</guimenuitem></term>
<listitem>
<para>
Show the game tree window.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Analyze Commands</guimenuitem></term>
<listitem>
<para>
Show a window to select analyze commands (see <xref linkend="analyze"/>).
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>GTP Shell</guimenuitem></term>
<listitem>
<para>
Show the GTP shell window.
</para>
</listitem>
</varlistentry>

<varlistentry id="reattachprogram">
<term><guimenuitem>Reattach Program</guimenuitem></term>
<listitem>
<para>
Restart the current Go program and synchronize it to the current game at
the current position again.
</para>
</listitem>
</varlistentry>

<varlistentry id="reattachwithparameters">
<term><guimenuitem>Reattach With Parameters</guimenuitem></term>
<listitem>
<para>
Like <xref linkend="reattachprogram"/> but saves the current program
parameters to a temporary GTP file and restores them after the program
was reattached (see <xref linkend="saveparameters"/>). If the program is
dead but a parameter snapshot exists it will be reattached with the
parameter snapshot.
</para>
</listitem>
</varlistentry>

<varlistentry id="snapshotparameters">
<term><guimenuitem>Snapshot Parameters</guimenuitem></term>
<listitem>
<para>
Like <xref linkend="saveparameters"/> but automatically saves to a temporary
file that can be restored during the current session with
<xref linkend="restoreparameters"/>. This command is useful for developers
who want to debug a crash of the program (which does not allow the developer
to use <xref linkend="reattachwithparameters"/> because the program must still
be alive when running this command).
</para>
</listitem>
</varlistentry>

<varlistentry id="restoreparameters">
<term><guimenuitem>Restore Parameters</guimenuitem></term>
<listitem>
<para>
See <xref linkend="snapshotparameters"/>.
</para>
</listitem>
</varlistentry>

<varlistentry id="saveparameters">
<term><guimenuitem>Save Parameters</guimenuitem></term>
<listitem>
<para>
Saves a GTP file for restoring the current state of all parameters from all
analyze commands of type "param" (see <xref linkend="analyze"/>). To restore
the parameters, use the <xref linkend="sendfile"/> or
<xref linkend="sendrecent"/> menu items.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Save Log</guimenuitem></term>
<listitem>
<para>
Save the GTP streams to a log file.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Save Commands</guimenuitem></term>
<listitem>
<para>
Save the sent GTP commands to a file.
</para>
</listitem>
</varlistentry>

<varlistentry id="sendfile">
<term><guimenuitem>Send File</guimenuitem></term>
<listitem>
<para>
Send GTP commands from a file to the engine.
This can be used to send a file containing GTP commands that configure
parameters of the engine.
The file is not allowed to contain any GTP command that change the
board state.
All commands are expected to succeed, sending will be aborted with an
error message if a command fails.
</para>
</listitem>
</varlistentry>

<varlistentry id="sendrecent">
<term><guimenuitem>Send Recent</guimenuitem></term>
<listitem>
<para>
Send GTP commands from a recently opened file to the engine.
See <xref linkend="sendfile"/>.
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

<section>
<title>Help Menu</title>
<variablelist>

<varlistentry>
<term><guimenuitem>GoGui Help</guimenuitem></term>
<listitem>
<para>
Open a window for browsing the GoGui documentation.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>About</guimenuitem></term>
<listitem>
<para>
Show the version and other information for GoGui, the Java platform, and the
currently attached Go program.
</para>
</listitem>
</varlistentry>

</variablelist>
<para><!-- Empty paragraph to enforce space in JEditorPane --></para>
</section>

</chapter>
